buildscript {
    ext {
    springBootVersion = '1.0.2.RELEASE'
    }
    repositories {
        maven { url "http://repo.spring.io/libs-snapshot" }
        mavenLocal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.0.2.RELEASE")
    }
}

configurations {
    lombok
    umljavadoc
}

apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'war'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'

sourceCompatibility = 1.7
targetCompatibility = 1.7

war {
    baseName = 'gs-convert-jar-to-war'
    version =  '0.1.0'
}

// Add the lombok configuration to all of the compile classpaths
sourceSets.each{ sourceSet -> 
    sourceSet.compileClasspath += configurations.lombok
    sourceSet.ext.delombok = new File(buildDir, "generated-src/delombok/" + sourceSet.name);
}

repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/libs-snapshot" }
    maven { url "http://maven.springframework.org/milestone" }
}   

dependencies {
    compile project(":PotlatchCommon")

    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    
    compile("org.springframework.boot:spring-boot-starter-tomcat:${springBootVersion}")

    compile("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-aop:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")

    compile("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
    compile 'org.springframework.data:spring-data-rest-webmvc'
    
    compile("org.springframework.boot:spring-boot-starter-security:${springBootVersion}")
    compile 'org.springframework.security.oauth:spring-security-oauth2:2.0.0.RC2'
    compile 'org.springframework.security.oauth:spring-security-oauth2-javaconfig:1.0.0.M1'
    
    compile 'org.hsqldb:hsqldb'
    
    compile 'com.github.davidmarquis:fluent-interface-proxy:1.3.0'
    compile 'com.google.guava:guava:18.0'
    
    testCompile 'junit:junit'
    groovy "org.codehaus.groovy:groovy-all:2.1.8"
    testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
    testCompile 'org.spockframework:spock-spring:0.7-groovy-2.0'
    testCompile 'org.springframework.boot:spring-boot-starter-test'

    umljavadoc 'org.umlgraph:umlgraph:5.6.6'
    
    lombok 'org.projectlombok:lombok:+'
}

task integration(type: Test) {
    testClassesDir = sourceSets.test.output.classesDir
    classpath = sourceSets.test.runtimeClasspath
}

check.dependsOn integration

task wrapper(type: Wrapper) {
    gradleVersion = '1.12'
}

// https://github.com/kercheval/GradleCMPlugin/wiki/Create-Javadoc-with-Class-Diagrams-using-UMLGraph-with-Gradle

// Override the javadoc task to use umlgraph doclet.  This depends on the presence
// of GraphViz on the path in your environment (http://www.graphviz.org)
//

task javadoc(overwrite: true, dependsOn: compileJava) {
    setDescription('Generates Javadoc API documentation with UMLGraph diagrams')
    setGroup(JavaBasePlugin.DOCUMENTATION_GROUP)

    doLast {
        def javaFilePath = file('src/main/java')
        if (javaFilePath.exists()) {
            ant.javadoc(classpath: (configurations.runtime + configurations.lombok + configurations.umljavadoc).asPath, 
                        sourcepath: file('src/main/java'), 
                        packagenames: '*',
                        destdir: "${docsDir}/javadoc",
                        private: 'false',
                        docletpath: configurations.umljavadoc.asPath) {
                doclet(name: 'org.umlgraph.doclet.UmlGraphDoc') {
                    param(name: '-inferrel')
                    param(name: '-inferdep')
                    param(name: '-qualify')
                    param(name: '-postfixpackage')
                    param(name: '-hide', value: 'java.*')
                    param(name: '-collpackages', value: 'java.util.*')
                    param(name: '-nodefontsize', value: '9')
                    param(name: '-nodefontpackagesize', value: '7')
                    param(name: '-link', value: 'http://java.sun.com/j2se/1.5.0/docs/guide/javadoc/doclet/spec')
                    param(name: '-link', value: 'http://java.sun.com/j2se/1.5/docs/api')
                }
            }
        }
    }
}
